version: "3.9"
services:
  db:
    image: postgis/postgis:13-3.2-alpine
    container_name: woodcamrm_db
    restart: always
    environment:
      TZ: $SCHEDULER_TIMEZONE
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    healthcheck:
      test: pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 5s
      timeout: 3s
      retries: 6
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7.0-rc2-alpine
    container_name: woodcamrm_redis
    restart: always
    environment:
      TZ: $SCHEDULER_TIMEZONE
      REDIS_PASSWORD: $REDIS_PASSWORD
    # volumes:
    #   - redis-data:/data
    command: redis-server --save 20 1 --loglevel warning --stop-writes-on-bgsave-error no --requirepass ${REDIS_PASSWORD}

  mqtt:
    build: 
      context: ./mosquitto
      args:
        mqtt_username: ${MQTT_USERNAME}
        mqtt_password: ${MQTT_PASSWORD}
    container_name: woodcamrm_mqtt
    restart: always
    environment:
      TZ: $SCHEDULER_TIMEZONE
    ports:
      - '1883:1883'
      - '8883:8883'
    volumes:
      - mqtt-data:/mosquitto/data
    
  ftp:
    image: delfer/alpine-ftp-server
    container_name: woodcamrm_ftp
    restart: always
    environment:
      TZ: $SCHEDULER_TIMEZONE
      USERS: ${FTP_USER}|${FTP_PASSWORD}|/data
      ADDRESS: ${APP_URL}
    ports:
      - "21:21"
      - "21000-21010:21000-21010"
    volumes:
      - video-data:/data

  app:
    build: .
    container_name: woodcamrm_app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:5000"
    environment:
      TZ: $SCHEDULER_TIMEZONE
    volumes:
      - ${PWD}/.env:/app/.env
      - video-data:/data

  worker:
    image: woodcam-rm_app:latest
    container_name: woodcamrm_worker
    restart: always
    command: celery -A woodcamrm.celery worker --loglevel=info
    depends_on:
      db:
        condition: service_healthy
    environment:
      TZ: $SCHEDULER_TIMEZONE
    volumes:
      - ${PWD}/.env:/app/.env
      - video-data:/data

volumes:
  db-data:
  mqtt-data:
  redis-data:
  video-data:
    driver_opts:
      type: tmpfs
      device: tmpfs