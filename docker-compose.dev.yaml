version: "3.9"
services:
  db:
    image: postgis/postgis:13-3.2-alpine
    environment:
      TZ: $SCHEDULER_TIMEZONE
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    healthcheck:
      test: pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 5s
      timeout: 3s
      retries: 6
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7.0-rc2-alpine
    environment:
      TZ: $SCHEDULER_TIMEZONE
      REDIS_PASSWORD: $REDIS_PASSWORD
    command: redis-server --save 20 1 --loglevel warning --stop-writes-on-bgsave-error no --requirepass ${REDIS_PASSWORD}
    
  ftp:
    image: delfer/alpine-ftp-server
    restart: always
    environment:
      TZ: $SCHEDULER_TIMEZONE
      USERS: ${FTP_USER}|${FTP_PASSWORD}|/data
      ADDRESS: ${APP_URL}
    ports:
      - "21:21"
      - "21000-21010:21000-21010"
    volumes:
      - video-data:/data

  app:
    build: .
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:5000"
    environment:
      TZ: $SCHEDULER_TIMEZONE
    volumes:
      - ${PWD}/.env:/app/.env
      - video-data:/data
      - ${PWD}:/app
    command: flask run --host=0.0.0.0

  worker:
    image: woodcam-rm_app:latest
    command: celery -A woodcamrm.celery worker --loglevel=debug -c 10
    depends_on:
      db:
        condition: service_healthy
    environment:
      TZ: $SCHEDULER_TIMEZONE
    volumes:
      - ${PWD}/.env:/app/.env
      - video-data:/data
      - ${PWD}:/app

  prometheus:
    image: prom/prometheus:v2.36.1
    ports:
      - 9090:9090
    volumes:
      - prometheus-data:/prometheus
      - ${PWD}/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=365d'  
      - '--web.config.file=/etc/prometheus/web.yml'

  # alertmanager:
  #   image: prom/alertmanager:v0.24.0
  #   volumes:
  #     - ${PWD}/prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml

  psql-exporter:
    image: prometheuscommunity/postgres-exporter:v0.10.1
    environment:
      DATA_SOURCE_NAME: ${SQLALCHEMY_DATABASE_URI}?sslmode=disable
    volumes:
      - ${PWD}/prometheus:/etc/prometheus
    command:
      - '--extend.query-path=/etc/prometheus/queries.yaml'

  snmp-exporter:
    image: prom/snmp-exporter:v0.20.0
    ports:
      - 9116:9116

  blackbox-exporter:
    image: prom/blackbox-exporter:v0.21.1
    volumes:
      - ${PWD}/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/blackbox.yml'
    ports:
      - 9115:9115

volumes:
  db-data:
  prometheus-data:
  video-data:
    driver_opts:
     type: tmpfs
     device: tmpfs
